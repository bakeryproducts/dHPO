
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/tools.ipynb

import os
import sys
sys.path.append(os.path.join(os.getcwd(),'exp'))

import fire
import docker
from config import cfg

def status():
    pattern = cfg.DOCKER.CONTAINER_PREFIX
    print(f'\nLooking for *{pattern}* containers: ')

    for c in cycle_c_gen():
        gpu = check_gpu(c)
        print(f'\t{c.name} @ GPU{gpu} @ {c.status}')

def cycle_c_gen(pat=cfg.DOCKER.CONTAINER_PREFIX):
    client = docker.from_env()
    containers = client.containers.list()
    for i, c in enumerate(containers):
        print(f'{i}. Inspecting {c.name}')
        if pat in c.name:
            yield c
        else:
            print(f'\t Skipping {c.name}, not part of dHPO\n')

def check_gpu(container):
    env_vars = container.attrs['Config']['Env']
    g = None
    for v in env_vars:
        if v.startswith('CUDA_VISIBLE_DEVICES'):
            g = v.split("=")[-1]
    return g.split(',')

def check_status(c):
    c.reload()
    return c.status

def is_running(c): return check_status(c) == 'running'
def is_paused(c): return check_status(c) == 'paused'

def unpause(c):
    if is_paused(c):
        print(f'\t UNpausing {c.name}...')
        c.unpause()
        print('\tSUCCESS')
        return True
    elif is_running(c):
        print(f'\tWARNING {c.name} already running!')
        return True
    else:
        print(f'\tSomething is wrong with {c.name}, check it manually')
        return False

def pause(c):
    if is_running(c):
        print(f'\t Pausing {c.name}...')
        c.pause()
        print('\tSUCCESS')
        return True
    elif is_paused(c):
        print(f'\tWARNING {c.name} already on pause!')
        return True
    else:
        print(f'\tSomething is wrong with {c.name}, check it manually')
        return False

def switch(gpus=None, mode=None):
    usage =''' Usage:
        switch $GPUS $MODE
        switch 0 pause
        switch 0,1 unpause
    '''
    if gpus is None or mode not in ['pause', 'unpause']:
        print(usage)
        return
        #exit(0)

    if not isinstance(gpus, tuple):
        gpus = gpus,
    gpus = set([str(i) for i in gpus])
    #print(gpus)
    if mode == 'pause':
        do = pause
    elif mode == 'unpause':
        do = unpause

    for c in cycle_c_gen():
        c_gpus = set(check_gpu(c))
        if c_gpus.intersection(gpus):
            print(f'\t{c.name} is using GPUS{c_gpus}, trying to set on "{mode}"')
            do(c)
        else:
            print(f'\tSkipping {c.name}, on GPU{c_gpus}')

def clean(force):
    if force == 'dhpo':
        for c in cycle_c_gen():
            if c.status == 'exited':
                c.remove()
    else:
        print('Usage: clean dhpo')

if __name__ == '__main__':
    fire.Fire({'status':status, 'switch':switch, 'clean':clean})